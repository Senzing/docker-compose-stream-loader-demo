version: '3'
services:

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: senzing-zookeeper
    ports:
      - '2181:2181'
    environment:
#     See https://github.com/bitnami/bitnami-docker-zookeeper#configuration
      ALLOW_ANONYMOUS_LOGIN: "yes"
    restart: always
    networks:
      - backend

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: senzing-kafka
    ports:
      - '9092:9092'
    environment:
#     See https://github.com/bitnami/bitnami-docker-kafka#configuration
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_NUM_PARTITIONS: 6
    depends_on:
      - zookeeper
    restart: always
    networks:
      - backend

  mockdata:
    image: senzing/mock-data-generator
    container_name: senzing-mock-data-generator
    environment:
#     See https://github.com/Senzing/docker-mock-data-generator#configuration
      SENZING_SUBCOMMAND: url-to-kafka
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: "senzing-kafka-topic"
      SENZING_INPUT_URL: "https://s3.amazonaws.com/public-read-access/TestDataSets/loadtest-dataset-1M.json"
      SENZING_RECORD_MONITOR: 100
      SENZING_RECORDS_PER_SECOND: 10
    networks:
      - backend
    depends_on:
      - kafka
    restart: on-failure

  mysql:
    image: mysql:5.7
    container_name: senzing-mysql
    environment:
#     See https://hub.docker.com/_/mysql/ "Environment Variables"
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-G2}
      MYSQL_USER: ${MYSQL_USERNAME:-g2}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-g2}
    restart: always
    networks:
      - backend
    ports:
      - 3306:3306
    volumes:
      - ${MYSQL_STORAGE:-/storage/docker/senzing/docker-compose-mysql-demo}:/var/lib/mysql

  mysqlinit:
    image: senzing/mysql-init
    container_name: senzing-mysql-init
    environment:
      SENZING_SENTINEL_FILE: ${SENZING_DIR:-/opt/senzing}/mysql-init.sentinel
    command:
      - --user=${MYSQL_USERNAME:-g2}
      - --password=${MYSQL_PASSWORD:-g2}
      - --host=mysql
      - --database=${MYSQL_DATABASE:-G2}
      - --execute="source ${SENZING_DIR:-/opt/senzing}/g2/data/g2core-schema-mysql-create.sql"
    networks:
      - backend
    volumes:
      - ${SENZING_DIR:-/opt/senzing}:/opt/senzing
    depends_on:
      - mysql
    restart: on-failure

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: senzing-phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    networks:
      - backend
    ports:
      - 8080:80
    restart: always
    depends_on:
      - mysql

  app1:
    image: senzing/stream-loader
    container_name: senzing-stream-loader-1
    environment:
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_SUBCOMMAND: kafka
      SENZING_DATA_SOURCE: PEOPLE
      SENZING_ENTITY_TYPE: PEOPLE
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: "senzing-kafka-topic"
      LC_CTYPE: en_US.utf8
    networks:
      - backend
    volumes:
      - ${SENZING_DIR:-/opt/senzing}:/opt/senzing
    depends_on:
      - mysqlinit
    restart: on-failure

  app2:
    image: senzing/stream-loader
    container_name: senzing-stream-loader-2
    environment:
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_SUBCOMMAND: kafka
      SENZING_DATA_SOURCE: PEOPLE
      SENZING_ENTITY_TYPE: PEOPLE
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: "senzing-kafka-topic"
      LC_CTYPE: en_US.utf8
    networks:
      - backend
    volumes:
      - ${SENZING_DIR:-/opt/senzing}:/opt/senzing
    depends_on:
      - mysqlinit
    restart: on-failure

  app3:
    image: senzing/stream-loader
    container_name: senzing-stream-loader-3
    environment:
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_SUBCOMMAND: kafka
      SENZING_DATA_SOURCE: PEOPLE
      SENZING_ENTITY_TYPE: PEOPLE
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: "senzing-kafka-topic"
      LC_CTYPE: en_US.utf8
    networks:
      - backend
    volumes:
      - ${SENZING_DIR:-/opt/senzing}:/opt/senzing
    depends_on:
      - mysqlinit
    restart: on-failure

networks:
  backend:
